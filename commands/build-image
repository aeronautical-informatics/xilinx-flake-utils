#!/usr/bin/env bash

UTILS_ROOT=$( cd "$(dirname -- "${BASH_SOURCE[0]}")"/.. && pwd )
source "$UTILS_ROOT/commands/lib.sh"

help()
{   
log usage "build-image [Arguments]
Arguments:        
    DIR    project directory"    
}

if [[ $# -eq 0 ]]
then
  help
fi

POSITIONAL=() 
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
        help
        ;;
    *)
        POSITIONAL+=($1)
        shift
        ;;
  esac
done

set -- "${POSITIONAL[@]}"

if [[ $# -lt 1 ]]
then
  help
fi

_ensure-exists dir DIR "$1"
_ensure-exists file PROJ_CFG "$DIR/project.cfg"

PLATFORM=$(grep "platform=" "$PROJ_CFG" | cut -d'=' -f2)
CARRIER=$(grep "carrier=" "$PROJ_CFG" | cut -d'=' -f2)

_ensure-exists file BIF_TMP "$UTILS_ROOT/templates/boot_image_"$PLATFORM"_template.bif"

_ensure-exists file FSBL "$DIR/bootloader_export/fsbl/fsbl_qspi_$PLATFORM.elf"
_ensure-exists file BITSTREAM "$DIR/hardware_configuration/"$CARRIER"_bitstream.bit"
_ensure-exists file UBOOT "$DIR/bootloader_export/u-boot/u-boot.elf"

case "$PLATFORM" in 
    "zynq7000")
        if [[ -d "$DIR/boot_image/" ]]
        then
            rm --recursive --force -- "$DIR/boot_image/"
        fi
        _mkdir-if-missing "$DIR/boot_image/"
        cp "$BIF_TMP" "$DIR/boot_image/boot_image.bif"
        sed -i "s/%platform/"$PLATFORM"/g" "$DIR/boot_image/boot_image.bif"
        sed -i "s/%carrier/"$CARRIER"/g" "$DIR/boot_image/boot_image.bif"

        pushd "$DIR/boot_image/" || return 1
        bootgen -arch zynq -image ./boot_image.bif -w -o BOOT.bin
        popd
        ;;
    *)
        log error "Boot Image generation for $PLATFORM is not supported." 1
        ;;
esac
